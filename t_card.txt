1. 卡牌设计的总体思路：“物以稀为贵”；卡牌共分为10个层级（level），每层有若干张卡片，可以按递减的原则，越高级别的卡牌越稀有；
2. 卡牌设计需要一个老外（特别是币圈内的老外）熟悉的故事背景，圣经是一个很好的切入点，而且无知识产权纠纷；
3. 卡牌的isElite、cardLevel两个属性，决定了卡牌4个战斗属性（up,down,left,right）;
4. 卡牌的(cardLevel,cardSequenceNo)决定了卡牌的链下数据； cardSequenceNo:表示某一个level内的卡牌指针；
5. 卡牌具有element属性，二期卡牌游戏会用到。
6. 卡牌的新增/删除：
    a. 新增某一层内的某张卡牌后，必须将该层卡牌数量（链上数据）+1；
    b. 该层卡牌数量levelCardsCount在随机获取该层卡牌时使用；
    c. levelCardsCount必须为链上数据，可防止前端直接调用合约的随机获取卡牌方法时作弊；
    d. 采用(cardLevel,cardSequenceNo)这种层次结构搭建卡牌，后期可以有无限卡牌扩展的可能，同时又不影响前期已经生成的卡牌；
    e. 卡牌无法删除；

7. 用户如何获取卡牌：
    a. 直接交易token所有权；
    b. 调用合约方法，发送ETH给合约生成token；
8. 用户如何获取高等级稀有卡牌：
    a. 直接交易token所有权；
    b. 调用合约方法，发送ETH给合约生成高等级token；
    c. 用户焚烧自己的卡牌后，有几率获取高等级的卡牌；
9. 用户如何获取精英（isElite == true)卡牌：
    a. 直接交易token所有权；
    b. 调用合约方法，发送ETH给合约生成精英token；
    c. 用户焚烧自己的卡牌后，有几率获取精英的卡牌；
10. 用户如何获取element属性的卡牌：
    a. 直接交易token所有权；
    b. 调用合约方法，发送ETH给合约生成token；
    c. 用户焚烧自己的卡牌后，有几率获取含element属性的卡牌；
